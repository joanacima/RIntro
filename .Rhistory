car::vif(ols2)
bptest(ols2)
robust_ols2 <- coeftest(ols2, vcov. = vcovHC(ols2, type="HC1"))
print(robust_ols2)
stargazer(robust_ols2,
digits = 4,
digits.extra = 1,
style = "qje",
type = "latex",
notes.align = "l",
out = "Regression_output.txt")
# Probit
probit <- glm(union ~ ., data = db_ols, family = binomial(link = "probit"))
summary(probit)
# Logit
logit <- glm(union ~ ., data=db_ols, family = binomial(link = "logit"))
summary(logit)
#export results 3 models
stargazer(probit,logit,
model.names=FALSE,
model.numbers = FALSE, title = "Regression",
column.labels = c( " Probit", "Logit"),
label = "regressions",
table.placement = "!ht",
notes.append = TRUE,
notes.align="l",
notes="Standard errors in parentheses.",
header = FALSE,
no.space = TRUE,
#covariate.labels = c("Height","Weight","Age", "Female"),
omit = c("Constant"),
omit.stat = c("adj.rsq","f","ser"),
omit.yes.no = c("Constant",""),
digits = 4,
digits.extra = 4,
dep.var.caption="",
dep.var.labels.include = FALSE,
style = "qje",
type = "latex",
out = "Tabela_modelos_binarios.txt")
m2 <- margins(probit)
summary(m2)
m3 <- margins(logit)
summary(m3)
# Setting a seed for reproducibility
set.seed(123)
# Splitting data
index <- createDataPartition(nlswork_no_na$ln_wage, p = 0.75, list = FALSE)
train_set <- nlswork_no_na[index, ]
test_set <- nlswork_no_na[-index, ]
# Training linear regression
linear_model <- lm(ln_wage ~ ., data=train_set)
# Making predictions on the test set
linear_predictions <- predict(linear_model, newdata=test_set)
# Evaluating the model
linear_RMSE <- sqrt(mean((linear_predictions - test_set$ln_wage)^2))
linear_RMSE
# Setting a seed for reproducibility
set.seed(123)
# Training Random Forest
rf_model <- randomForest(ln_wage ~ ., data=train_set)
# Making predictions on the test set
rf_predictions <- predict(rf_model, newdata=test_set)
# Evaluating the model
rf_RMSE <- sqrt(mean((rf_predictions - test_set$ln_wage)^2))
rf_RMSE
# Creating a dataframe to compare results
results <- data.frame(
Model = c("Linear Regression", "Random Forest"),
RMSE = c(linear_RMSE, rf_RMSE)
)
results
#BEGIN SOLUTION
card <- as.data.frame(read_excel("card.xlsx"))
#END SOLUTION
#BEGIN SOLUTION
card_no_na<- drop_na(card)
#END SOLUTION
#BEGIN SOLUTION
ols_card <- lm(data = card_no_na, lwage ~ IQ+married+age+educ)
summary(ols_card)
#END SOLUTION
#BEGIN SOLUTION
importance <- varImp(ols_card, scale = TRUE)
print(importance)
#END SOLUTION
#BEGIN SOLUTION
bptest(ols_card)
#END SOLUTION
#BEGIN SOLUTION
#END SOLUTION
average_wage <- mean(card_no_na$wage)
# Create a binary variable (high wage): 1 if wage is above average, 0 otherwise
card_no_na <- card_no_na %>%
mutate(high_wage = ifelse(wage > average_wage, 1, 0))
#BEGIN SOLUTION
card_no_na<-drop_na(card)
#END SOLUTION
average_wage <- mean(card_no_na$wage)
# Create a binary variable (high wage): 1 if wage is above average, 0 otherwise
card_no_na <- card_no_na %>%
mutate(high_wage = ifelse(wage > average_wage, 1, 0))
linearHypothesis(ols2,c("age=0"))
linearHypothesis(ols2, "union = collgrad =age")
linearHypothesis(ols2,c("age=0"))
linearHypothesis(ols2, "union = collgrad = age")
linearHypothesis(ols2,c("age=0"))
linearHypothesis(ols2, "union = collgrad = age")
linearHypothesis(ols2,c("age=0"))
linearHypothesis(ols2, c("union = collgrad", "collgrad = age"))
linearHypothesis(ols2,c("age=0"))
linearHypothesis(ols2, c("union = collgrad", "collgrad = age", "collgrad=0"))
linearHypothesis(ols2,c("age=0"))
linearHypothesis(ols2, c("union = collgrad", "collgrad = age")
library(knitr) #to produce dynamic reports, allowing the embedding of R code, its results, and text into a single document
# knitr::opts_chunk$set(echo = TRUE)
library(haven) #to import and export data in SPSS, Stata, and SAS formats, enhancing interoperability with other statistical software
library(rmarkdown) #is used to convert files that contain text and R code into documents of various formats, such as HTML, PDF, and Word
library(writexl) #to export tabular data from R to Excel files
library(Hmisc) #provides a collection of functions for data manipulation, statistical analysis, and graph creation, facilitating various stages of the analytical process
library(naniar) #exploring and visualizing missing data in the dataset
library(here)
rm(list = ls())
here()
getwd()
# Define working directory
setwd("C:\\Users\\Joana Cima\\Documents\\GitHub\\RIntro")
library(tidyverse) #provides a set of tools for data manipulation, visualization, and modeling
library(readxl) # allows us to read Excel files (.xls or .xlsx) directly into R.
library(visdat) #to explore our dataset through visualizations.
library(stargazer) #to produce beautiful LaTeX or HTML tables and descriptive statistics from R statistical output
library(GGally) #to extend ggplot2 functionality to create a scatterplot matrix
nlswork <- as.data.frame(read_excel("nlswork.xlsx"))
# nlswork <- read_dta("nlswork.dta") # in case you have a Stata data source
nlswork_s<- nlswork %>%
select(idcode, ln_wage)
nlswork_r <- nlswork %>%
rename(cae = ind_code)
nlswork_f<- nlswork %>%
filter(age > 40)
nlswork_m <- nlswork %>%
mutate(ln_asd=log(age))
nlswork1<- nlswork %>%
rename(cae = ind_code) %>%
select(idcode, ln_wage, age) %>%
filter(age > 40) %>%
mutate(age2=age^2)
vis_miss(nlswork)
gg_miss_var(nlswork) + labs(y = "Total missing values for each variable")
gg_miss_upset(nlswork)
gg_miss_fct(x = nlswork,fct = year)
vis_dat(nlswork)
nlswork_filled <- nlswork %>%
mutate(across(c("union"), ~ ifelse(is.na(.), mean(., na.rm = TRUE), .)))
View(nlswork_filled)
nlswork_filled <- nlswork %>%
mutate(across(c("union"), ~ ifelse(is.na(.), mode(., na.rm = TRUE), .)))
nlswork_filled <- nlswork %>%
mutate(union = if_else(is.na(union),
calc_mode(union),
union))
library(tidyverse)
# Filling Missing Data (with the average - this is an example)
nlswork_filled <- nlswork %>%
mutate(across(c("union"), ~ ifelse(is.na(.), mean(., na.rm = TRUE), .)))
nlswork_filled <- nlswork %>%
mutate(union = if_else(is.na(union),
calc_mode(union),
union))
library(tidyverse)
# Filling Missing Data (with the average - this is an example) - não faz sentido
nlswork_filled <- nlswork %>%
mutate(across(c("union"), ~ ifelse(is.na(.), mean(., na.rm = TRUE), .)))
# Create a function to compute mode
calc_mode <- function(x) {
tbl <- table(x, useNA = "no")  # ignora NAs
max_freq <- max(tbl)
mode_val <- as.numeric(names(tbl)[tbl == max_freq])
if(length(mode_val) > 1) {
warning("Existem múltiplas modas. Selecionando a menor.")
mode_val <- min(mode_val)
}
return(mode_val)
}
nlswork_filled <- nlswork %>%
mutate(union = if_else(is.na(union),
calc_mode(union),
union))
# compute the mode
mode_union <- calc_mode(nlswork$union)
# Replace NA by mode in column union
nlswork_filled <- nlswork %>%
mutate(union = if_else(is.na(union), mode_union, union))
View(nlswork_filled)
library(tidyverse)
# Filling Missing Data
## (with the average - this is an example - it does not make sense in this case)
nlswork_filled <- nlswork %>%
mutate(across(c("union"), ~ ifelse(is.na(.), mean(., na.rm = TRUE), .)))
## (with the mode)
### Create a function to compute mode
calc_mode <- function(x) {
tbl <- table(x, useNA = "no")  # ignora NAs
max_freq <- max(tbl)
mode_val <- as.numeric(names(tbl)[tbl == max_freq])
if(length(mode_val) > 1) {
warning("Existem múltiplas modas. Selecionando a menor.")
mode_val <- min(mode_val)
}
return(mode_val)
}
### compute the mode
mode_union <- calc_mode(nlswork$union)
### Replace NA by mode in column union
nlswork_filled <- nlswork %>%
mutate(union = if_else(is.na(union), mode_union, union))
library(knitr) #to produce dynamic reports, allowing the embedding of R code, its results, and text into a single document
# knitr::opts_chunk$set(echo = TRUE)
library(haven) #to import and export data in SPSS, Stata, and SAS formats, enhancing interoperability with other statistical software
library(rmarkdown) #is used to convert files that contain text and R code into documents of various formats, such as HTML, PDF, and Word
library(writexl) #to export tabular data from R to Excel files
library(Hmisc) #provides a collection of functions for data manipulation, statistical analysis, and graph creation, facilitating various stages of the analytical process
library(naniar) #exploring and visualizing missing data in the dataset
library(here)
rm(list = ls())
here()
getwd()
# Define working directory
setwd("C:\\Users\\Joana Cima\\Documents\\GitHub\\RIntro")
library(knitr) #to produce dynamic reports, allowing the embedding of R code, its results, and text into a single document
# knitr::opts_chunk$set(echo = TRUE)
library(haven) #to import and export data in SPSS, Stata, and SAS formats, enhancing interoperability with other statistical software
library(rmarkdown) #is used to convert files that contain text and R code into documents of various formats, such as HTML, PDF, and Word
library(writexl) #to export tabular data from R to Excel files
library(Hmisc) #provides a collection of functions for data manipulation, statistical analysis, and graph creation, facilitating various stages of the analytical process
library(naniar) #exploring and visualizing missing data in the dataset
library(here)
rm(list = ls())
here()
getwd()
# Define working directory
setwd("C:\\Users\\Joana Cima\\Documents\\GitHub\\RIntro")
library(tidyverse) #provides a set of tools for data manipulation, visualization, and modeling
library(readxl) # allows us to read Excel files (.xls or .xlsx) directly into R.
library(visdat) #to explore our dataset through visualizations.
library(stargazer) #to produce beautiful LaTeX or HTML tables and descriptive statistics from R statistical output
library(GGally) #to extend ggplot2 functionality to create a scatterplot matrix
library(knitr) #to produce dynamic reports, allowing the embedding of R code, its results, and text into a single document
# knitr::opts_chunk$set(echo = TRUE)
library(haven) #to import and export data in SPSS, Stata, and SAS formats, enhancing interoperability with other statistical software
library(rmarkdown) #is used to convert files that contain text and R code into documents of various formats, such as HTML, PDF, and Word
library(writexl) #to export tabular data from R to Excel files
library(Hmisc) #provides a collection of functions for data manipulation, statistical analysis, and graph creation, facilitating various stages of the analytical process
library(naniar) #exploring and visualizing missing data in the dataset
library(here)
rm(list = ls())
here()
getwd()
# Define working directory
setwd("C:\\Users\\Joana Cima\\Documents\\GitHub\\RIntro")
library(tidyverse) #provides a set of tools for data manipulation, visualization, and modeling
library(readxl) # allows us to read Excel files (.xls or .xlsx) directly into R.
library(visdat) #to explore our dataset through visualizations.
library(stargazer) #to produce beautiful LaTeX or HTML tables and descriptive statistics from R statistical output
library(GGally) #to extend ggplot2 functionality to create a scatterplot matrix
nlswork <- as.data.frame(read_excel("nlswork.xlsx"))
# nlswork <- read_dta("nlswork.dta") # in case you have a Stata data source
nlswork_s<- nlswork %>%
select(idcode, ln_wage)
nlswork_r <- nlswork %>%
rename(cae = ind_code)
nlswork_f<- nlswork %>%
filter(age > 40)
nlswork_m <- nlswork %>%
mutate(ln_asd=log(age))
nlswork1<- nlswork %>%
rename(cae = ind_code) %>%
select(idcode, ln_wage, age) %>%
filter(age > 40) %>%
mutate(age2=age^2)
vis_miss(nlswork)
gg_miss_var(nlswork) + labs(y = "Total missing values for each variable")
gg_miss_upset(nlswork)
gg_miss_fct(x = nlswork,fct = year)
vis_dat(nlswork)
library(tidyverse)
# Filling Missing Data
## (with the average - this is an example - it does not make sense in this case)
nlswork_filled <- nlswork %>%
mutate(across(c("union"), ~ ifelse(is.na(.), mean(., na.rm = TRUE), .)))
## (with the mode)
### Create a function to compute mode
calc_mode <- function(x) {
tbl <- table(x, useNA = "no")  # ignora NAs
max_freq <- max(tbl)
mode_val <- as.numeric(names(tbl)[tbl == max_freq])
if(length(mode_val) > 1) {
warning("Existem múltiplas modas. Selecionando a menor.")
mode_val <- min(mode_val)
}
return(mode_val)
}
### compute the mode
mode_union <- calc_mode(nlswork$union)
### Replace NA by mode in column union
nlswork_filled <- nlswork %>%
mutate(union = if_else(is.na(union), mode_union, union))
# Or excluding rows with missing data
nlswork_no_na <- na.omit(nlswork)
summary(nlswork_no_na)
summary(nlswork_no_na[,c("grade","union","ln_wage")])
str(nlswork_no_na)
nlswork_no_na %>%
dplyr::select(age, collgrad, ttl_exp, union, hours) %>%
stargazer(title="Shorter statistics",
type= "text", out = "Statistics_output.html",
digits = 2)
nlswork_no_na %>%
dplyr::select(age, collgrad, ttl_exp, union, hours) %>%
stargazer(title="Shorter statistics",
type= "text", out = "Statistics_output.txt",
digits = 3)
nlswork_no_na %>%
dplyr::select(age, collgrad, ttl_exp, union, hours) %>%
stargazer(title="Shorter statistics",
type= "text", out = "Statistics_output2.txt",
digits = 3, flip=TRUE)
nlswork_no_na %>%
dplyr::select(age, collgrad, ttl_exp, union, hours) %>%
stargazer(title="Shorter statistics",
type= "latex",
digits = 3, flip=TRUE)
nlswork_no_na %>%
ggplot(aes(ttl_exp,ln_wage)) +
labs(title = "Ln Wage vs. Experience") +
ylab("Ln Wage") +
xlab("Experience") +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue")
ggplot(data = nlswork_no_na) +
geom_bar(mapping=aes(x=as.factor(collgrad))) +
xlab("College graduate (1=Yes)")
ggplot(data = nlswork_no_na) +
geom_histogram(mapping = aes(x = wks_work), binwidth = 0.5)
nlswork_no_na %>% ggplot(aes(x=as.factor(collgrad), y=ln_wage)) +
geom_boxplot(fill="slateblue", alpha=0.2) +
xlab("College graduate (1=Yes)")
nlswork_no_na %>% ggplot(mapping = aes(x = ln_wage, y = ..density..)) +
xlab("ln(wage)") +
ylab("Density") +
geom_freqpoly(mapping = aes(colour = factor(collgrad, labels=c("No", "Yes")))) +
labs(color ="College degree")
ggpairs(nlswork_no_na[, c("age","ttl_exp","hours")], title="Correlogram with ggpairs()")
#BEGIN SOLUTION
#END SOLUTION
#BEGIN SOLUTION
#END SOLUTION
#BEGIN SOLUTION
#END SOLUTION
#BEGIN SOLUTION
#END SOLUTION
#BEGIN SOLUTION
#END SOLUTION
#BEGIN SOLUTION
#END SOLUTION
#BEGIN SOLUTION
#END SOLUTION
#BEGIN SOLUTION
#END SOLUTION
#BEGIN SOLUTION
card <- as.data.frame(read_excel("card.xlsx"))
#END SOLUTION
#BEGIN SOLUTION
card_no_na <na.omit(card_no_na)
#BEGIN SOLUTION
card_no_na <na.omit(card)
#BEGIN SOLUTION
card_no_na <na.omit(card)
#BEGIN SOLUTION
card_no_na <- na.omit(card)
#END SOLUTION
View(card_no_na)
View(card)
library(knitr) #to produce dynamic reports, allowing the embedding of R code, its results, and text into a single document
# knitr::opts_chunk$set(echo = TRUE)
library(haven) #to import and export data in SPSS, Stata, and SAS formats, enhancing interoperability with other statistical software
library(rmarkdown) #is used to convert files that contain text and R code into documents of various formats, such as HTML, PDF, and Word
library(writexl) #to export tabular data from R to Excel files
library(Hmisc) #provides a collection of functions for data manipulation, statistical analysis, and graph creation, facilitating various stages of the analytical process
library(naniar) #exploring and visualizing missing data in the dataset
library(here)
library(rstatix)
library(DescTools)
rm(list = ls())
here()
getwd()
#knitr::opts_knit$set(root.dir = "C:\\Users\\Joana Cima\\Documents\\GitHub\\RIntro")
# Define working directory
setwd("C:\\Users\\Joana Cima\\Documents\\GitHub\\RIntro")
library(tidyverse) #provides a set of tools for data manipulation, visualization, and modeling
library(readxl) # allows us to read Excel files (.xls or .xlsx) directly into R.
library(visdat) #to explore our dataset through visualizations.
library(stargazer) #to produce beautiful LaTeX or HTML tables and descriptive statistics from R statistical output
library(GGally) #to extend ggplot2 functionality to create a scatterplot matrix
nlswork <- as.data.frame(read_excel("nlswork.xlsx"))
# nlswork <- read_dta("nlswork.dta") # in case you have a Stata data source
head(nlswork)
colnames(nlswork)
str(nlswork)
nlswork_s<- nlswork %>%
select(idcode, ln_wage)
nlswork_r <- nlswork %>%
rename(cae = ind_code)
nlswork_f<- nlswork %>%
filter(age > 20)
nlswork_m <- nlswork %>%
mutate(ln_asd=log(age))
nlswork_new <- nlswork %>%
rename(cae = ind_code) %>%
select(ln_wage, age, year, race, union, collgrad, cae, ttl_exp, hours ) %>%
filter(age>=20) %>%
mutate(age2=age^2)
vis_miss(nlswork_new)
gg_miss_var(nlswork_new) + labs(y = "Total missing values for each variable")
gg_miss_upset(nlswork_new)
gg_miss_fct(x = nlswork_new,fct = year)
vis_dat(nlswork_new)
library(tidyverse)
# Filling Missing Data
## (with the average - this is an example - it does not make sense in this case)
nlswork_filled <- nlswork %>%
mutate(across(c("union"), ~ ifelse(is.na(.), mean(., na.rm = TRUE), .)))
## (with the mode)
### Create a function to compute mode
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
nlswork_filled2 <- nlswork
union_mode <- mode(nlswork$union[!is.na(nlswork$union)])
nlswork_filled2$union[is.na(nlswork$union)] <- union_mode
nlswork_no_na <- na.omit(nlswork_new)
boxplot(nlswork_no_na$age, main="Boxplot for Outlier Detection - Age")
boxplot(nlswork_no_na$ln_wage, main="Boxplot for Outlier Detection - ln_wage")
outliers <- identify_outliers(as.data.frame(nlswork_no_na$ln_wage))
extreme_outliers <- outliers[outliers$is.extreme, ]
extreme_outliers
extreme_values_to_remove <- extreme_outliers$`nlswork_no_na$ln_wage`
nlswork_no_outliers <- nlswork_no_na[!nlswork_no_na$ln_wage %in% extreme_values_to_remove, ]
nlswork_no_na$ln_wage_winsorized <- Winsorize(nlswork_no_na$ln_wage,
probs = c(0, 0.99))
summary(nlswork_no_na)
nlswork_no_na  %>%
dplyr::select(age, collgrad, ttl_exp, union, hours, ln_wage_winsorized) %>%
stargazer(title="Shorter statistics",
type= "text", out = "Statistics_output.html",
digits = 2)
nlswork_no_na %>%
dplyr::select(age, collgrad, ttl_exp, union, hours, ln_wage_winsorized) %>%
stargazer(title="Shorter statistics",
type= "text", out = "Statistics_output.txt",
digits = 3)
nlswork_no_na %>%
dplyr::select(age, collgrad, ttl_exp, union, hours, ln_wage_winsorized) %>%
stargazer(title="Shorter statistics",
type= "text", out = "Statistics_output2.html",
digits = 3, flip=TRUE)
nlswork_no_na %>%
dplyr::select(age, collgrad, ttl_exp, union, hours) %>%
stargazer(title="Shorter statistics",
type= "latex",
digits = 3, flip=TRUE)
nlswork_no_na %>%
ggplot(aes(ttl_exp,ln_wage_winsorized)) +
labs(title = "Ln Wage vs. Experience") +
ylab("Ln Wage") +
xlab("Experience") +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue")
ggplot(data = nlswork_no_na) +
geom_bar(mapping=aes(x=as.factor(collgrad))) +
xlab("College graduate (1=Yes)")
ggplot(data = nlswork_no_na) + geom_histogram(mapping = aes(x = age), binwidth = 1) +
scale_x_continuous(breaks = seq(20, 50, by = 5))
nlswork_no_na %>% ggplot(aes(x=as.factor(collgrad), y=ln_wage_winsorized)) +
geom_boxplot(fill="slateblue", alpha=0.2) +
xlab("College graduate (1=Yes)")
nlswork_no_na %>% ggplot(mapping = aes(x = ln_wage, y = ..density..)) +
xlab("ln(wage)") +
ylab("Density") +
geom_freqpoly(mapping = aes(colour = factor(collgrad, labels=c("No", "Yes")))) +
labs(color ="College degree")
ggpairs(nlswork_no_na[, c("age","ttl_exp","hours")], title="Correlogram with ggpairs()")
#BEGIN SOLUTION
card <- as.data.frame(read_excel("card.xlsx"))
#END SOLUTION
View(card)
#BEGIN SOLUTION
vis_dat(card)
#END SOLUTION
#BEGIN SOLUTION
vis_miss(card)
#END SOLUTION
#BEGIN SOLUTION
boxplot(card$ln_wage)
View(card)
#BEGIN SOLUTION
boxplot(card$lwage")
#END SOLUTION
#BEGIN SOLUTION
boxplot(card$lwage)
#END SOLUTION
